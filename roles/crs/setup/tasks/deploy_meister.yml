---
- name: Create Meister manifests folder
  file:
    path="{{ crs_manifests_path }}/meister"
    state=directory

- name: Get Kubernetes authentication user and token
  shell: "cat {{ kube_token_file_path }} | head -n1"
  register: kubernetes_service_credentials

- name: Copy Meister manifests
  template: src="{{ item.file }}" dest="{{ crs_manifests_path }}/{{ item.file }}"
  with_items:
    - {name: meister, file: meister/replication.yml, type: "rc"}
  register: manifests

- name: Deploy Meister
  kube:
    name: "{{ item.name }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.type }}"
    filename: "{{ crs_manifests_path }}/{{ item.file }}"
    state: "latest"
  with_items:
    - {name: meister, file: meister/replication.yml, type: "rc"}
  when: inventory_hostname == groups['kube-master'][0]
